#!/bin/bash
BINDIR="$(dirname $0)"
. $BINDIR/utils/constants.sh
. $BINDIR/utils/colors.sh

# variables
PROJECTS=()

function run_benchmark {
    export OMP_NUM_THREADS=1
    export MKL_NUM_THREADS=1
    export MKL_DOMAIN_NUM_THREADS=1
    export JULIA_NUM_THREADS=1

    printf "${BLUE}benchmarking:${NC} ${BOLD}$1${NC}\n"
    (cd $1 && bash benchmarks.sh)
}

function setup {
    case $1 in
        essentials)     setup_essentials
                        ;;
        *)              printf "${BLUE}setting up:${NC} ${BOLD}$1${NC}\n"
                        (cd $1 && bash setup.sh)
                        ;;
    esac
}

function setup_essentials {
    if [ ! -f "$CONDA" ]; then
        bash "$BINDIR/install_conda.sh"
    fi

    if [ ! -f "$JULIA" ]; then
        bash "$BINDIR/install_julia.sh"
    fi
}

function setup_projects {
    setup essentials
    for pj in "${PROJECTS[@]}"
    do
        setup $pj
    done
}

function scan_projects {
    for d in $ROOT_PATH/*/ ; do
        if [ -e $d/benchmarks.sh ]; then
            PROJECTS+=($d)
        fi
    done
}

function show_projects {
    for pj in "${PROJECTS[@]}"
    do
        echo "$pj"
    done
}

function run_projects {
    project_ptr=0
    len=${#PROJECTS[@]}
    while [[ $project_ptr < $len ]]
    do
        pids=()
        for i in {1...$NCORES}
        do
            run_benchmark ${PROJECTS[project_ptr]} &
            pids+=($!)
            project_ptr=$(( project_ptr+1 ))
        done

        # wait
    done
}

function info {
    printf "CPU CORES: $NCORES\n"
}

function help {
    printf """
Quantum Circuit Simulation Benchmark.
Copyright (C) 2020 Xiu-Zhe (Roger) Luo <rogerluo.rl18@gmail.com> and contributors
Distributed under terms of the MIT license.

${BOLD}COMMAND${NC}

    bin/benchmark <options> args...


${BOLD}OPTIONS${NC}

setup [project/essentials]          setup the given project, if project is not specified,
                                    all projects in this benchmark will be setup. If the project
                                    is essentials, it will try to install all essentials dependencies

run [project]                       run the given project benchmark, if project is not
                                    specified, all projects in this benchmark will be
                                    setup.

list                                list available projects to run.

info                                print current machine info.

help                                print this message.
"""
}

function main {
    case $#$1 in
        1setup)     scan_projects && setup_projects
                    ;;
        1run)       scan_projects && run_projects
                    ;;
        1list)      scan_projects && show_projects
                    ;;
        2setup)     setup $2
                    ;;
        2run)       run_benchmark $2
                    ;;
        1info)      info
                    ;;
        *)          help
                    ;;
    esac
}

# scan_projects
# run_projects
main "$@"
